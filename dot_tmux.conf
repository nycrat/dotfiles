# ==========================
# ===  General settings  ===
# ==========================

set -g default-terminal "xterm-kitty"
set-option -g focus-events on
set-option -sa terminal-features ',XXX:RGB'
set-option -ga terminal-overrides ",screen-256color:Tc"

set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on

set -g history-limit 20000
set -g buffer-limit 20
set -s escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename on
setw -g automatic-rename on
setw -g aggressive-resize on

# Change prefix key to C-Space
unbind C-b
set -g prefix C-Space

# Enable mouse support
set -g mouse on

# ==========================
# ===   Key bindings     ===
# ==========================

# Unbind default key bindings, we're going to override
unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
unbind \}    # swap-pane -D
unbind \{    # swap-pane -U
unbind [    # paste-buffer
unbind ]    
unbind C-i
unbind Tab
unbind C-o    
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind &    # kill-window
unbind '#'  # list-buffer 
unbind =    # choose-buffer
unbind z    # zoom-pane
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left
unbind w
unbind C-w

# unbind keys
unbind Up     
unbind Down   
unbind Left   
unbind Right  

unbind C-Up   
unbind C-Down 
unbind C-Left 
unbind C-Right

unbind Escape

# vim-like pane resizing  
bind -r C-k resize-pane -U 5
bind -r C-j resize-pane -D 5
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5

# vim-like pane switching
bind -r k select-pane -U 
bind -r j select-pane -D 
bind -r h select-pane -L 
bind -r l select-pane -R 

# Kill pane/window/session shortcuts
bind q kill-pane
bind Q kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a" # maybe remove
bind x confirm-before -p "kill-session #S? (y/n)" kill-session

# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# Reload tmux configuration 
bind e source-file ~/.tmux.conf \; display "Config reloaded"

# new window and retain cwd
unbind t
bind t new-window -c "#{pane_current_path}"

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split panes
bind b split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"

bind -r \{ swap-window -t -1\; select-window -t -1
bind -r \} swap-window -t +1\; select-window -t +1

# Select pane and windows
bind -r [ previous-window
bind -r ] next-window

# Zoom pane
bind Enter resize-pane -Z # maybe remove
bind z resize-pane -Z # maybe remove

# Link window
bind L command-prompt -p "Link window from (session:window): " "link-window -s %% -a" # maybe remove

# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# Hide status bar on demand
bind C-w if -F '#{s/off//:status}' 'set status off' 'set status on'


# ================================================
# ===     Copy mode, scroll and clipboard      ===
# ================================================
set -g @copy_use_osc52_fallback on

# Prefer vi style key table
setw -g mode-keys vi

bind p paste-buffer # maybe remove
bind C-p choose-buffer # maybe remove

# trigger copy mode by
bind y copy-mode

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up
bind -T copy-mode-vi v                      send -X begin-selection

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

yank="~/.tmux/yank.sh"

# Copy selected text
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi Y send-keys -X copy-end-of-line-and-cancel \;\
    run "tmux save-buffer - | $yank" ;

# Copy selection on drag end event, but do not cancel copy mode and do not clear selection
# clear select on subsequence mouse click
bind -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X copy-pipe "$yank"
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
   send-keys -X clear-selection
    
# iTerm2 works with clipboard out of the box, set-clipboard already set to "external"
# tmux show-options -g -s set-clipboard
# set-clipboard on|external

# =====================================
# ===           Theme               ===
# =====================================

color_dark=black
color_light=white
color_session_text=orangered
color_status_text=webgray
color_main=orangered
color_secondary=dodgerblue
color_window_off_indicator=red
color_window_off_status_bg=dimgray
color_window_off_status_current_bg=default

# =====================================
# ===    Appearence and status bar  ===
# ======================================

set -g mode-style "fg=default,bg=default"

# command line style
set -g message-style "fg=$color_main,bg=default"

# status line style
set -g status-style "fg=$color_status_text,bg=default"

# window segments in status line
set -g window-status-separator ""

setw -g window-status-style "fg=$color_status_text,bg=default"
setw -g window-status-format " #I:#W"
setw -g window-status-current-style "fg=$color_secondary,bold,bg=default"
setw -g window-status-current-format " #I:#W"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

# outline for active pane
setw -g pane-active-border-style "fg=$color_main"

# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position top
set -g status-justify left
set -g status-right-length 100
set -g status-left-length 20
set -g status-bg default

# define widgets we're going to use in status bar
# note, that this is not the complete list, some of them are loaded from plugins
wg_session="#[fg=$color_session_text,bold] #S#[default]"
wg_is_zoomed="#[fg=$color_main,bg=default]#{?window_zoomed_flag,[Z],}#[default]"
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set -g status-left "$wg_session"
set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed"

# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_fg "$color_status_text"
set -g @prefix_highlight_bg default
set -g @prefix_highlight_show_copy_mode 'on'


# =====================================
# ===        Renew environment      ===
# =====================================

set -g update-environment \
  "DISPLAY\
  SSH_ASKPASS\
  SSH_AUTH_SOCK\
  SSH_AGENT_PID\
  SSH_CONNECTION\
  SSH_TTY\
  WINDOWID\
  XAUTHORITY"

bind '$' run "~/.tmux/renew_env.sh"


# ============================
# ===       Plugins        ===
# ============================

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @plugin 'tmux-plugins/tmux-sidebar'
# set -g @plugin 'tmux-plugins/tmux-copycat' # Just too many issues rn

set -g @open-S 'https://www.google.com/search?q='


# ==============================================
# ===   Nesting local and remote sessions     ===
# ==============================================

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format " #I:#W " \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

# Run all plugins' scripts
run '~/.tmux/plugins/tpm/tpm'
