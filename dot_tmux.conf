# ==========================
# ===  General settings  ===
# ==========================

set-option -g focus-events on

set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on

# Prefer vi style key table
setw -g mode-keys vi

set -g history-limit 20000
set -g mouse off

# Change prefix key to C-Space
unbind C-b
set -g prefix C-Space

# ==========================
# ===   Key bindings     ===
# ==========================

# vim-like pane resizing  
bind -r C-k resize-pane -U 5
bind -r C-j resize-pane -D 5
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5

# vim-like pane switching
bind -r k select-pane -U 
bind -r j select-pane -D 
bind -r h select-pane -L 
bind -r l select-pane -R 

# Kill pane/window/session shortcuts
bind q kill-pane
bind Q kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a" # maybe remove
bind x confirm-before -p "kill-session #S? (y/n)" kill-session

# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# Reload tmux configuration 
bind e source-file ~/.tmux.conf \; display "Config reloaded"

# new window and retain cwd
unbind t
bind t new-window -c "#{pane_current_path}"

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split panes
bind b split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"

bind -r \{ swap-window -t -1\; select-window -t -1
bind -r \} swap-window -t +1\; select-window -t +1

# Select pane and windows
bind -r [ previous-window
bind -r ] next-window

# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# ================================================
# ===     Copy mode, scroll and clipboard      ===
# ================================================
set -g @copy_use_osc52_fallback on

bind p paste-buffer
bind C-p choose-buffer

# trigger copy mode
bind y copy-mode

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up
bind -T copy-mode-vi v                      send -X begin-selection

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

yank="~/.tmux/yank.sh"

# Copy selected text
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "$yank"

# =====================================
# ===           Theme               ===
# =====================================

color_status_text=webgray
color_main=orangered
color_secondary=dodgerblue

# =====================================
# ===    Appearence and status bar  ===
# ======================================

set -g mode-style "fg=default"

# command line style
set -g message-style "fg=$color_main"

# status line style
set -g status-style "fg=$color_status_text"

setw -g window-status-style "fg=$color_status_text"
setw -g window-status-format "#I:#W"
setw -g window-status-current-style "fg=$color_secondary,bold"
setw -g window-status-current-format "#I:#W"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

# outline for active pane
setw -g pane-active-border-style "fg=$color_main"

# general status bar settings
set -g status on
set -g status-position top
set -g status-justify absolute-centre

set -g status-left "#[fg=$color_main,bold] #S#[default]"

# extend session name length
set -g status-left-length 30

wg_is_zoomed="#[fg=$color_main]#{?window_zoomed_flag,[Z],}#[default]"
wg_is_keys_off="#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"
set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed"

# =====================================
# ===        Renew environment      ===
# =====================================

# set -g update-enviroment \
#   "display\
#   ssh_askpass\
#   ssh_auth_sock\
#   ssh_agent_pid\
#   ssh_connection\
#   ssh_tty\
#   wINDOWID\
#   XAUTHORITY"

# bind '$' run "~/.tmux/renew_env.sh"

# ============================
# ===       Plugins        ===
# ============================

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# ==============================================
# ===   Nesting local and remote sessions     ===
# ==============================================

# Session is considered to be remote when we ssh into host
# if-shell 'test -n "$SSH_CLIENT"' \
#     'source-file ~/.tmux/tmux.remote.conf'

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  refresh-client -S

# Run all plugins' scripts
run '~/.tmux/plugins/tpm/tpm'
